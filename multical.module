<?php
// $Id$

/**
 * @file
 * Implements necessary hooks for Multical module, plus API and helper functions.
 */

/**
 * Implements hook_perm().
 */
function multical_perm() {

}
 
/**
 * Implements hook_init().
 */
function multical_init() {

}

/**
 * Implements hook_menu().
 */
function multical_menu() {

}

/**
 * Implements hook_patch().
 *
 * @see http://drupal.org/project/patchdoq
 */
function multical_patch() {
  return array(
    'common.inc' => array(
      'name' => t('Core common.inc patch'),
      'description' => t('Drupal core common.inc expansion to support hook_format_date() implementations.'),
      'file' => drupal_get_path('module', 'multical') . '/patch/common.inc-format_date.d6.patch',
      'patch arguments' => '-p0',
    ),
  );
}

/**
 * The heart of API, which somehow acts as a ExtDateTime procedural factory wrapper.
 *
 * The function as the heart of the API instantiate the proper object 
 * corresponding to the passed calendar identifier or the default one.
 *
 * @param $calendar
 *   Calendar identifier.
 *
 * @return
 *   The instantiated calendar object.
 */
function multical($calendar = NULL) {

}

/**
 * API function to provide a list of all calendars.
 *
 * @param $op
 *   The format of return list. Could be:
 *     - calendar: Returns information about calendar identified by $identifier.
 *     - calendars: Returns a list of all available calendar informations.
 *     - name: Return the name of a calendar identified by $identifier.
 *     - names: Returns a list of all available calendar names.
 * @param $identifier
 *   A calendar identifier to filter the results.
 *
 * @return
 *   An array of calendars or a single calendar.
 *
 * @see _multical_calendars_build()
 */
function multical_calendars($op = 'calendars', $identifier = NULL) {
  list($calendars, $names) = _multical_calendars_build();
  
  switch ($op) {
    case 'calendars':
      return $calendars;
    
    case 'calendar':
      return array_merge($calendars[$identifer], array('identifier' => $identifier));
      
    case 'names':
      return $names;
      
    case 'name':
      return $names[$identifier];
  }
  
}

/**
 * Helper function to collect a list of defined calendars.
 *
 * @return
 *   An array of available calendars.
 */
function _multical_calendars_build() {
  $names = array();
  $calendars = array();
  
  $calendars_defined = module_invoke_all('calendar_info');
  foreach ($calendars_defined as $identifier => $info) {
    $info['config'] = variable_get('multical_' . $identifier . '_settings', '');
    $calendars[$identifier] = $info;
    $names = $info['name'];
  }
  
  return array($calendars, asort($names));
}

/**
 * API function to get current default calendar.
 *
 * @return
 *   An array of default calendar information.
 */
function multical_default_calendar() {
  return multical_calendars('calendar', variable_get('multical_default_calendar', ''));
}

