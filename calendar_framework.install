<?php
// $Id$

/**
 * @file
 * Implementation of Calendar Framework un/installation hooks.
 */

/**
 * Implements hook_enable().
 */
function calendar_framework_enable() {
  $type = 'status';

  $advice = t('This is strongly recommended to use <a href="!patchdoq">Patchdoq</a> or <a href="!patchmanager">Patch Manager</a> to handle core and contrib patches.',
    array(
      '!patchdoq' => module_exists('patchdoq') ? url('admin/build/patchdoq') : 'http://drupal.org/project/patchdoq',
      '!patchmanager' => module_exists('patch_manager') ? url('admin/build/patch') : 'http://drupal.org/project/patch_manager',
    )
  );

  // If the patch is not yet applied, set an additional
  // message and change all message types to 'warning'.
  if (!_calendar_framework_patch_applied()) {
    $type = 'warning';
    drupal_set_message(t('Even though the <a href="!link">Calendar Framework</a> module is now enabled, it is useless till you properly apply the patch.',
      array(
        '!link' => url('admin/settings/date-time/calendars'),
      )
    ), $type);
  }
  drupal_set_message($advice, $type);

  // If patch_manager exists, create a patch node type.
  if (module_exists('patch_manager')) {
    $patch = new stdClass();
    $patch->type = 'patch';
    $patch->title = t('Core common.inc patch');
    $patch->body = t('Drupal core common.inc expansion to support hook_format_date() implementations.');

    node_save($patch);
  }
}

/**
 * Implements hook_uninstall().
 */
function calendar_framework_uninstall() {
  // Module API is not available at this point.
  // Using db_query() and LIKE is un-encouraged.
  include_once dirname(__FILE__) . '/calendar_framework.module';

  // Remove all calendars settings.
  $calendars = calendar_framework_calendars();
  foreach ($calendars as $identifer => $info) {
    variable_del('calendar_framework_settings_' . $identifier);
  }

  // TODO: Remove the patch_manager record.
}

/**
 * Implements hook_requirements().
 */
function calendar_framework_requirements($phase) {
  global $base_url;

  $t = get_t();
  $requirements = array();
  $requirements_error = $t('Calendar Framework <a href="!patch">patch</a> is not yet applied to <em>includes/common.inc</em> file, but it is required for the module to function. Please refer to <a href="!docs">Applying Patches Documentation</a> to be able to apply this patch correctly. Also, It is strongly recommended to use <a href="!patchdoq">Patchdoq</a> or <a href="!patchmanager">Patch Manager</a> to handle core and contrib patches.',
    array(
      '!patch' => $base_url . '/' . drupal_get_path('module', 'calendar_framework') . '/patch/common.inc-format_date.d6.patch',
      '!docs' => 'http://drupal.org/patch/apply',
      '!patchdoq' => module_exists('patchdoq') ? url('admin/build/patchdoq') : 'http://drupal.org/project/patchdoq',
      '!patchmanager' => module_exists('patch_manager') ? url('admin/build/patch') : 'http://drupal.org/project/patch_manager',
    )
  );

  if (_calendar_framework_patch_applied()) {
    $requirements['calendar_framework'] = array('severity' => REQUIREMENT_OK);
    return $requirements;
  }

  // Setting proper requirements severity.
  if ($phase == 'install' && (module_exists('patchdoq') || module_exists('patch_manager'))) {
    $requirements_severity = REQUIREMENT_WARNING;
  }
  else {
    $requirements_severity = REQUIREMENT_ERROR;
  }

  $requirements['calendar_framework'] = array(
    'severity' => $requirements_severity,
    'description' => $requirements_error,
  );

  return $requirements;
}

/**
 * Helper function to check whether the patch
 * is applied to the core includes/common.inc file or not.
 *
 * @return
 *   Boolean value.
 *
 * @todo Check whether the runkit extension is loaded to do some dirty magic.
 */
function _calendar_framework_patch_applied() {
  // Patch existance identifier.
  $patch_id = 'foreach (module_implements(\'format_date\') as $module)';

  // Patch target relative path to Drupal base.
  $relative_path = 'includes/common.inc';

  // Patch target absolute path.
  if (module_exists('absolute_path')) {
    global $absolute_path;
    $target = $absolute_path . '/' . $relative_path;
  }
  else {
    $target = realpath(drupal_get_path('module', 'system') . '/../../' . $relative_path);
  }

  // Applied?
  // We won't get a negetive position ever.
  return (bool) strpos(file_get_contents($target), $patch_id);
}

